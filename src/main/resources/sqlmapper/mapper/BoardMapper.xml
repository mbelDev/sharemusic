<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.music.sharemusic.dao.BoardDao">

<!-- 게시글 등록 -->
<insert id="putPost" parameterType="BoardDto">
  INSERT INTO BOARD VALUES(BOARD_SEQ.NEXTVAL, #{postAuth}, 
    #{postTitle}, #{postSinger}, #{postCont}, #{postLink},
    #{postGenre}, #{postEmote}, 0, 0, SYSDATE)
</insert>

<!-- 한 글 불러오기 -->
<select id="getPostOne" parameterType="Integer" resultType="BoardDto">
  SELECT * FROM BOARD WHERE POSTNO = #{postNo}
</select>

<!-- 모든 글 불러오기 -->
<select id="getPostAll" parameterType="HashMap" resultType="BoardDto">
  SELECT * FROM BOARD
  <if test="searchTxt != null">
    WHERE (
    (LOWER(POSTAUTH) LIKE '%' || #{searchTxt} || '%') OR
    (LOWER(POSTTITLE) LIKE '%' || #{searchTxt} || '%') OR
    (LOWER(POSTSINGER) LIKE '%' || #{searchTxt} || '%') OR
    (LOWER(POSTCONT) LIKE '%' || #{searchTxt} || '%')
    )
  </if>
  <if test = "category != null">
    AND 
    (POSTGENRE = #{category}) OR
    (POSTEMOTE = #{category})
  </if>
    ORDER BY ${sort} desc
</select>

<!-- 팔로우 중인 글 불러오기 #권인호 -->
<select id="getFollowList" parameterType="HashMap" resultType="BoardDto">
  SELECT * FROM BOARD WHERE POSTAUTHID IN (SELECT FOLLOWID FROM FOLLOW WHERE USERID = #{userID}) ORDER BY ${sort} desc
</select>

<!-- 마이리스트 불러오기 #권인호 -->
<select id="getMyList" parameterType="HashMap" resultType="BoardDto">
  SELECT * FROM BOARD WHERE POSTNO IN (SELECT POSTNO FROM HISTORY WHERE USERID = #{userID}
  <if test="category.equals('liked')">
   AND LIKED = 1 
  </if>
  <if test="category.equals('bookmark')">
   AND BOOKMARK = 1 
  </if>
  )
  ORDER BY ${sort} desc
</select>

<!-- 랭킹 글 불러오기 -->
<select id="getRankPost" resultType="BoardDto">
  SELECT * FROM (
    SELECT * FROM BOARD ORDER BY POSTLIKE DESC, POSTNO DESC
  ) WHERE ROWNUM <![CDATA[<=]]> 5
</select>

<!-- 월간 랭킹 글 불러오기  -->
<select id="getMonthRankPost" parameterType="Integer" resultType="BoardDto">
  SELECT * FROM (
      SELECT * FROM BOARD ORDER BY POSTLIKE DESC, POSTNO DESC
    )
    WHERE 
    ROWNUM <![CDATA[<=]]> 5 AND
    TO_CHAR(POSTDATE, 'YYYYMM') = (
    SELECT TO_CHAR(ADD_MONTHS(TRUNC(SYSDATE, 'MONTH'), -1 + #{moveMonth}), 'YYYYMM') FROM DUAL)
</select>

<!-- 주간 랭킹 글 불러오기 -->
<select id="getWeeklyRankPost" parameterType="Integer" resultType="BoardDto">
  SELECT * FROM (
    SELECT * FROM BOARD ORDER BY POSTLIKE DESC, POSTNO DESC
  ) 
  WHERE 
  ROWNUM <![CDATA[<=]]> 5 AND (
  TO_CHAR(POSTDATE, 'YYYYMMDD') BETWEEN 
    (SELECT TO_CHAR(TRUNC(SYSDATE, 'iw') - 7 + (7 * #{moveWeekly}), 'YYYYMMDD') FROM DUAL) AND
    (SELECT TO_CHAR(TRUNC(SYSDATE, 'iw') - 1 + (7 * #{moveWeekly}), 'YYYYMMDD') FROM DUAL)
  )
</select>

<!-- 글 내용 수정하기 -->
<update id="updatePost" parameterType="BoardDto">
  UPDATE BOARD SET POSTTITLE = #{postTitle}, POSTSINGER = #{postSinger},
    POSTCONT = #{postCont}, POSTLINK = #{postLink}, POSTGENRE = #{postGenre},
    POSTEMOTE = #{postEmote} WHERE POSTNO = #{postNo}
</update>

<!-- 추천수 업데이트 -->
<update id="updateLike" parameterType="HashMap">
  UPDATE BOARD SET POSTLIKE = POSTLIKE + #{updateLike} WHERE POSTNO = #{postNo}
</update>

<!-- 조회수 업데이트 -->
<update id="updateHits" parameterType="Integer">
  UPDATE BOARD SET POSTHITS = POSTHITS + 1 WHERE POSTNO = #{postNo}
</update>

<!-- 글 삭제 -->
<delete id="deletePost" parameterType="boardDto">
  DELETE FROM BOARD WHERE POSTNO = #{postNo}
</delete>

</mapper>